{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\board-game\\\\ts_front\\\\src\\\\pages\\\\tictactoe\\\\TicTacToe.tsx\",\n  _s = $RefreshSig$();\n/* Base */\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n/* Context */\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\n\n/* Styling */\nimport './TicTacToe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square(_ref) {\n  let {\n    squareColId,\n    squareRowId,\n    squareValue,\n    handleClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: e => handleClick(e, squareColId, squareRowId),\n    children: squareValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\nexport default function TicTacToe() {\n  _s();\n  const isInitialized = useRef(false);\n  const boardSize = useRef(0);\n  const initialBoardState = useRef([]);\n  const initialSquareMatrix = useRef([]);\n  const colId = useRef([]);\n  const rowId = useRef([]);\n  const [squareMatrix, setSquareMatrix] = useState([]);\n  const {\n    state\n  } = useAuthContext();\n  const [error, setError] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  const ws = useRef(null);\n  const ws_url = \"ws://127.0.0.1:8000/ws/tictactoe/\" + id;\n  const navigate = useNavigate();\n  const initializeBoard = jsonData => {\n    boardSize.current = jsonData.board_size;\n    colId.current = Array.from(Array(boardSize.current).keys());\n    rowId.current = Array.from(Array(boardSize.current).keys());\n    initialBoardState.current = jsonData.board_status;\n    initialSquareMatrix.current = Array.from({\n      length: boardSize.current\n    }, () => Array.from({\n      length: boardSize.current\n    }, () => \"\"));\n    initializeSquareMatrix();\n    isInitialized.current = true;\n  };\n  const initializeSquareMatrix = () => {\n    initialBoardState.current.map(square => {\n      initialSquareMatrix.current[square.col_id][square.row_id] = square.value;\n    });\n    setSquareMatrix(initialSquareMatrix.current);\n  };\n  const changeSquareValue = (colId, rowId, value) => {\n    console.log(\"Changing Square... Col ID: \" + colId + \" Row ID: \" + rowId + \" to Value: \" + value);\n    let tmp = [...squareMatrix];\n    tmp[colId][rowId] = value;\n    setSquareMatrix(tmp);\n  };\n  useEffect(() => {\n    ws.current = new WebSocket(ws_url);\n    ws.current.onopen = () => console.log(\"Websocket connection opened\");\n    ws.current.onclose = () => console.log(\"Websocket connection closed\");\n    ws.current.onmessage = function (res) {\n      const jsonData = JSON.parse(res.data);\n      if (jsonData.status === \"success\") {\n        console.log(\"Initializing board\");\n        initializeBoard(jsonData);\n      } else {\n        setError(jsonData.message);\n      }\n    };\n    const wsCurrent = ws.current;\n    return () => {\n      wsCurrent.close();\n    };\n  }, [ws_url]);\n  useEffect(() => {\n    if (!ws.current) {\n      return;\n    }\n    ws.current.onmessage = function (res) {\n      const jsonData = JSON.parse(res.data);\n      console.log(jsonData);\n      console.log(\"Variable check on message received_____\");\n      console.log(\"Is Initialized: \" + isInitialized);\n      console.log(\"Current BoardSize: \" + boardSize.current);\n      console.log(\"Square Matrix: \");\n      console.log(squareMatrix);\n      console.log(\"Variable check on message received fin_____\");\n      if (jsonData.status === \"success\" && jsonData.type === \"connect\") {\n        console.log(\"Initiating Board\");\n        initializeBoard(jsonData);\n      }\n      if (jsonData.status === \"success\" && jsonData.type === \"ingame\") {\n        console.log(\"Square Value Login\");\n        console.log(boardSize.current);\n        console.log(squareMatrix);\n        changeSquareValue(jsonData.message.col_id, jsonData.message.row_id, jsonData.message.square_value);\n      }\n      if (jsonData.status === \"error\") {\n        setError(jsonData.message);\n      }\n    };\n    console.log(\"ChangeSquare\");\n    console.log(isInitialized);\n    console.log(boardSize.current);\n    console.log(squareMatrix);\n    console.log(gameSquares);\n    console.log(\"ChangeSquareFin\");\n  }, [gameSquares]);\n  const handleClick = (e, squareColId, squareRowId) => {\n    if (!ws.current) {\n      console.log(\"No WebSocket Connection\");\n      return;\n    }\n    ;\n    const username = state.username;\n    ws.current.send(JSON.stringify({\n      username: username,\n      col_id: squareColId,\n      row_id: squareRowId\n    }));\n  };\n  const goToLobby = e => {\n    navigate(\"/tictactoe/lobby/\" + state.username);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [!isInitialized.current && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 41\n    }, this), isInitialized.current && boardSize.current != 0 && [...Array(boardSize.current)].map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_row\",\n      children: [...Array(boardSize.current)].map((e, j) => /*#__PURE__*/_jsxDEV(Square, {\n        squareColId: colId.current[j],\n        squareRowId: rowId.current[i],\n        squareValue: gameSquares[j][i],\n        handleClick: e => handleClick(e, colId.current[j], rowId.current[i])\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToLobby,\n      children: \"Go back to Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n\n/*  */\n/**/\n_s(TicTacToe, \"HavD0ARyNIHg9bq5W6wRdN8yCRo=\", false, function () {\n  return [useAuthContext, useParams, useNavigate];\n});\n_c2 = TicTacToe;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"TicTacToe\");","map":{"version":3,"names":["useState","useEffect","useRef","useParams","useNavigate","useAuthContext","Square","squareColId","squareRowId","squareValue","handleClick","e","TicTacToe","isInitialized","boardSize","initialBoardState","initialSquareMatrix","colId","rowId","squareMatrix","setSquareMatrix","state","error","setError","id","ws","ws_url","navigate","initializeBoard","jsonData","current","board_size","Array","from","keys","board_status","length","initializeSquareMatrix","map","square","col_id","row_id","value","changeSquareValue","console","log","tmp","WebSocket","onopen","onclose","onmessage","res","JSON","parse","data","status","message","wsCurrent","close","type","square_value","gameSquares","username","send","stringify","goToLobby","i","j"],"sources":["D:/Code/board-game/ts_front/src/pages/tictactoe/TicTacToe.tsx"],"sourcesContent":["/* Base */\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n/* Context */\r\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\r\n\r\n/* Styling */\r\nimport './TicTacToe.css'\r\n\r\n\r\ninterface IBackEndSquareProp {\r\n    col_id: number,\r\n    row_id: number,\r\n    value: string\r\n}\r\n\r\n\r\ninterface IFrontEndSquareProp {\r\n    squareColId: number,\r\n    squareRowId: number,\r\n    squareValue: string,\r\n    handleClick: (e:React.MouseEvent<HTMLButtonElement>, squareColId: number, squareRowId: number) => void\r\n}\r\n\r\n\r\ninterface IInitializationData {\r\n    board_size: number,\r\n    board_status: IBackEndSquareProp[]\r\n}\r\n\r\n\r\nfunction Square( {squareColId, squareRowId, squareValue, handleClick }: IFrontEndSquareProp )  {\r\n    return(\r\n        <button className='square' onClick={(e) => handleClick(e, squareColId, squareRowId)}>\r\n            {squareValue}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default function TicTacToe() {\r\n\r\n    const isInitialized = useRef<boolean>(false)\r\n    const boardSize = useRef<number>(0)\r\n    const initialBoardState = useRef<IBackEndSquareProp[]>([])\r\n    const initialSquareMatrix = useRef<string[][]>([]);\r\n    const colId = useRef<number[]>([])\r\n    const rowId = useRef<number[]>([])\r\n\r\n    const [ squareMatrix, setSquareMatrix ] = useState<string[][]>([]);\r\n\r\n    const { state } = useAuthContext()\r\n    const [ error, setError ] = useState<string>(\"\")\r\n    const { id } = useParams()\r\n    const ws = useRef< WebSocket | null>(null)\r\n    const ws_url: string = \"ws://127.0.0.1:8000/ws/tictactoe/\" + id\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const initializeBoard = (jsonData: IInitializationData) => {\r\n        boardSize.current = jsonData.board_size\r\n        colId.current = Array.from(Array(boardSize.current).keys())\r\n        rowId.current = Array.from(Array(boardSize.current).keys())\r\n        initialBoardState.current = jsonData.board_status\r\n        initialSquareMatrix.current = Array.from({length: boardSize.current},()=> Array.from({length: boardSize.current}, () => \"\"))\r\n        initializeSquareMatrix()\r\n        isInitialized.current = true\r\n    }\r\n\r\n\r\n    const initializeSquareMatrix = () => {\r\n        initialBoardState.current.map((square: IBackEndSquareProp) => {\r\n            initialSquareMatrix.current[square.col_id][square.row_id] = square.value\r\n        })\r\n        setSquareMatrix(initialSquareMatrix.current)\r\n    }\r\n\r\n\r\n    const changeSquareValue = (colId : number, rowId: number, value: string) => {\r\n        console.log(\"Changing Square... Col ID: \" + colId + \" Row ID: \" + rowId + \" to Value: \" + value)\r\n        let tmp = [ ...squareMatrix ];\r\n        tmp[colId][rowId] = value\r\n        setSquareMatrix(tmp);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        ws.current = new WebSocket(ws_url);\r\n        ws.current.onopen = () => console.log(\"Websocket connection opened\")\r\n        ws.current.onclose = () => console.log(\"Websocket connection closed\")\r\n\r\n        ws.current.onmessage = function (res: MessageEvent) {\r\n            const jsonData = JSON.parse(res.data);\r\n            if (jsonData.status === \"success\") {\r\n                console.log(\"Initializing board\")\r\n                initializeBoard(jsonData)   \r\n            } else {\r\n                setError(jsonData.message)\r\n            }\r\n        }\r\n\r\n        const wsCurrent = ws.current;\r\n\r\n        return () => {\r\n            wsCurrent.close();\r\n        };\r\n\r\n    }, [ws_url])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!ws.current) {return}\r\n\r\n            ws.current.onmessage = function (res: MessageEvent) {\r\n\r\n            const jsonData = JSON.parse(res.data);\r\n            console.log(jsonData)\r\n            console.log(\"Variable check on message received_____\")\r\n            console.log(\"Is Initialized: \" + isInitialized)\r\n            console.log(\"Current BoardSize: \" + boardSize.current)\r\n            console.log(\"Square Matrix: \")\r\n            console.log(squareMatrix)\r\n            console.log(\"Variable check on message received fin_____\")\r\n\r\n            if (jsonData.status === \"success\" && jsonData.type === \"connect\") {\r\n                console.log(\"Initiating Board\")\r\n                initializeBoard(jsonData)   \r\n            }\r\n\r\n            if (jsonData.status === \"success\" && jsonData.type === \"ingame\") {\r\n                console.log(\"Square Value Login\")\r\n                console.log(boardSize.current)\r\n                console.log(squareMatrix)\r\n                changeSquareValue(jsonData.message.col_id, jsonData.message.row_id, jsonData.message.square_value)\r\n            } \r\n            \r\n            if (jsonData.status === \"error\") {\r\n                setError(jsonData.message)\r\n            }\r\n        }\r\n\r\n        console.log(\"ChangeSquare\"); console.log(isInitialized); console.log(boardSize.current); console.log(squareMatrix); console.log(gameSquares); console.log(\"ChangeSquareFin\")\r\n    }, [gameSquares])\r\n\r\n    \r\n\r\n    \r\n    const handleClick = (e:React.MouseEvent<HTMLButtonElement>, squareColId: number, squareRowId: number) => {     \r\n\r\n        if (!ws.current) {console.log(\"No WebSocket Connection\"); return};\r\n        \r\n        const username: string | null = state.username\r\n\r\n        ws.current.send(JSON.stringify({username: username, col_id: squareColId, row_id: squareRowId}));\r\n\r\n    }\r\n\r\n\r\n    const goToLobby = (e:React.MouseEvent<HTMLButtonElement>) => {\r\n        navigate(\"/tictactoe/lobby/\" + state.username)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='board'>\r\n            \r\n            { !isInitialized.current && <h1>Loading...</h1> }\r\n            { isInitialized.current && boardSize.current != 0 && [ ...Array(boardSize.current) ].map((e, i) => \r\n                <div className='board_row' key={i}>\r\n                    { [ ...Array(boardSize.current) ].map((e, j) => \r\n                        <Square \r\n                            key={j}\r\n                            squareColId={colId.current[j]} \r\n                            squareRowId={rowId.current[i]} \r\n                            squareValue={gameSquares[j][i]}\r\n                            handleClick={(e) => handleClick(e, colId.current[j], rowId.current[i])}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n            { error && <p>{error}</p>}\r\n            <button onClick={goToLobby}>Go back to Lobby</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*  */\r\n/**/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}