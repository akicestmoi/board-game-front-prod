{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\board-game\\\\ts_front\\\\src\\\\components\\\\ErrorModal.tsx\",\n  _s = $RefreshSig$();\n/* Base */\nimport { useState } from 'react';\n\n/* Bootstrap */\nimport { Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ErrorModal(_ref) {\n  _s();\n  let {\n    errorMessage,\n    showModal,\n    onClose\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(showModal);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"error_modal\",\n    show: showModal,\n    onHide: onClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: [\"Error\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"error_modal_close\",\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: errorMessage\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(ErrorModal, \"R0863LAGOXQF3k27WQQXOovcjRE=\");\n_c = ErrorModal;\nvar _c;\n$RefreshReg$(_c, \"ErrorModal\");","map":{"version":3,"names":["useState","Modal","ErrorModal","errorMessage","showModal","onClose","isOpen","setIsOpen"],"sources":["D:/Code/board-game/ts_front/src/components/ErrorModal.tsx"],"sourcesContent":["/* Base */\r\nimport { useState } from 'react'\r\n\r\n/* Bootstrap */\r\nimport { Modal } from 'react-bootstrap'\r\n\r\n\r\nexport default function ErrorModal( { errorMessage, showModal, onClose }: any) {\r\n\r\n    const [ isOpen, setIsOpen ] = useState<boolean>(showModal)\r\n\r\n    return (\r\n        <Modal className=\"error_modal\" show={showModal} onHide={onClose}>\r\n            <Modal.Header>Error<button className=\"error_modal_close\" onClick={onClose}>X</button></Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    { errorMessage }\r\n                </>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA,SAASC,KAAK,QAAQ,iBAAiB;AAAA;AAAA;AAGvC,eAAe,SAASC,UAAU,OAA6C;EAAA;EAAA,IAA3C;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAa,CAAC;EAEzE,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGP,QAAQ,CAAUI,SAAS,CAAC;EAE1D,oBACI,QAAC,KAAK;IAAC,SAAS,EAAC,aAAa;IAAC,IAAI,EAAEA,SAAU;IAAC,MAAM,EAAEC,OAAQ;IAAA,wBAC5D,QAAC,KAAK,CAAC,MAAM;MAAA,iCAAM;QAAQ,SAAS,EAAC,mBAAmB;QAAC,OAAO,EAAEA,OAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACpG,QAAC,KAAK,CAAC,IAAI;MAAA,uBACP;QAAA,UACMF;MAAY;IACf;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEhB;AAAC,GAduBD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}