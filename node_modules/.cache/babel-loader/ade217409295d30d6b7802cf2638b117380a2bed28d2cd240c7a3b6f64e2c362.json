{"ast":null,"code":"import _toConsumableArray from\"D:/Code/prod/board-game-front-prod/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"D:/Code/prod/board-game-front-prod/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/Code/prod/board-game-front-prod/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';export default function useTictactoeLog(backendOutcome){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState([\"Game created\"]),_useState4=_slicedToArray(_useState3,2),gameLog=_useState4[0],setGameLog=_useState4[1];var _useState5=useState({firstPlayer:null,secondPlayer:null,currentTurn:null,gameOver:false,gameWinner:null,isDraw:false}),_useState6=_slicedToArray(_useState5,2),gameStatus=_useState6[0],setGameStatus=_useState6[1];useEffect(function(){if(backendOutcome&&backendOutcome.status===\"error\"){switch(backendOutcome.data.category){case\"waiting_opponent\":setError(\"Please wait for an opponent to join the game\");break;case\"game_over\":setError(\"The game is already over\");break;case\"wrong_turn\":setError(\"This is not your turn. You cannot play on oppent's turn\");break;case\"square_taken\":setError(\"The selected square is already taken. Please choose another square\");break;default:break;}}else if(backendOutcome&&backendOutcome.status===\"success\"){setGameStatus(_objectSpread(_objectSpread({},gameStatus),{},{firstPlayer:backendOutcome.data.board_status.creator,secondPlayer:backendOutcome.data.board_status.opponent,currentTurn:backendOutcome.data.board_status.current_player,gameOver:backendOutcome.data.board_status.is_finished,gameWinner:backendOutcome.data.board_status.winner,isDraw:backendOutcome.data.board_status.draw}));setError(\"\");switch(backendOutcome.data.category){case\"game_join\":setGameLog([].concat(_toConsumableArray(gameLog),[\"\".concat(backendOutcome.data.username,\" joined the game\")]));break;case\"game_leave\":setGameLog([].concat(_toConsumableArray(gameLog),[\"\".concat(backendOutcome.data.username,\" left the game\")]));break;case\"turn_change\":setGameLog([].concat(_toConsumableArray(gameLog),[\"This is now \".concat(backendOutcome.data.board_status.current_player,\" turn to play\")]));break;case\"is_winner\":setGameLog([].concat(_toConsumableArray(gameLog),[\"Congratulation! \".concat(backendOutcome.data.board_status.winner,\" wins the game\")]));break;case\"is_draw\":setGameLog([].concat(_toConsumableArray(gameLog),[\"The game ended in a draw!\"]));break;default:break;}}},[backendOutcome]);return{gameStatus:gameStatus,gameLog:gameLog,error:error};}","map":{"version":3,"names":["useState","useEffect","useTictactoeLog","backendOutcome","error","setError","gameLog","setGameLog","firstPlayer","secondPlayer","currentTurn","gameOver","gameWinner","isDraw","gameStatus","setGameStatus","status","data","category","board_status","creator","opponent","current_player","is_finished","winner","draw","username"],"sources":["D:/Code/prod/board-game-front-prod/src/hooks/useTictactoeLog.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\n\r\ninterface IGameStatus {\r\n    firstPlayer: string | null, \r\n    secondPlayer: string | null, \r\n    currentTurn: string | null, \r\n    gameOver: boolean, \r\n    gameWinner: string | null, \r\n    isDraw: boolean\r\n}\r\n\r\n\r\nexport default function useTictactoeLog(backendOutcome: any) {\r\n\r\n    const [ error, setError ] = useState<string>(\"\")\r\n    const [ gameLog, setGameLog ] = useState<string[]>([\"Game created\"])\r\n    const [ gameStatus, setGameStatus ] = useState<IGameStatus>({ \r\n        firstPlayer: null, \r\n        secondPlayer: null, \r\n        currentTurn: null, \r\n        gameOver: false, \r\n        gameWinner: null, \r\n        isDraw: false\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (backendOutcome && backendOutcome.status === \"error\") {\r\n\r\n            switch (backendOutcome.data.category) {\r\n                case \"waiting_opponent\":\r\n                    setError(\"Please wait for an opponent to join the game\")\r\n                    break\r\n                case \"game_over\":\r\n                    setError(\"The game is already over\")\r\n                    break\r\n                case \"wrong_turn\":\r\n                    setError(\"This is not your turn. You cannot play on oppent's turn\")\r\n                    break\r\n                case \"square_taken\":\r\n                    setError(\"The selected square is already taken. Please choose another square\")\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n        else if (backendOutcome && backendOutcome.status === \"success\") {\r\n\r\n            setGameStatus({ \r\n                ...gameStatus, \r\n                firstPlayer: backendOutcome.data.board_status.creator, \r\n                secondPlayer: backendOutcome.data.board_status.opponent, \r\n                currentTurn: backendOutcome.data.board_status.current_player, \r\n                gameOver: backendOutcome.data.board_status.is_finished, \r\n                gameWinner: backendOutcome.data.board_status.winner, \r\n                isDraw: backendOutcome.data.board_status.draw\r\n            })\r\n            setError(\"\")\r\n\r\n            switch (backendOutcome.data.category) {\r\n                case \"game_join\":\r\n                    setGameLog([ ...gameLog, `${backendOutcome.data.username} joined the game` ])\r\n                    break\r\n                case \"game_leave\":\r\n                    setGameLog([ ...gameLog, `${backendOutcome.data.username} left the game` ])\r\n                    break\r\n                case \"turn_change\":\r\n                    setGameLog([ ...gameLog, `This is now ${backendOutcome.data.board_status.current_player} turn to play` ])\r\n                    break\r\n                case \"is_winner\":\r\n                    setGameLog([ ...gameLog, `Congratulation! ${backendOutcome.data.board_status.winner} wins the game` ])\r\n                    break\r\n                case \"is_draw\":\r\n                    setGameLog([ ...gameLog, `The game ended in a draw!` ])\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n\r\n    }, [backendOutcome])\r\n        \r\n\r\n    return { gameStatus, gameLog, error }\r\n}\r\n"],"mappings":"+WAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAa3C,cAAe,SAASC,gBAAe,CAACC,cAAmB,CAAE,CAEzD,cAA4BH,QAAQ,CAAS,EAAE,CAAC,wCAAxCI,KAAK,eAAEC,QAAQ,eACvB,eAAgCL,QAAQ,CAAW,CAAC,cAAc,CAAC,CAAC,yCAA5DM,OAAO,eAAEC,UAAU,eAC3B,eAAsCP,QAAQ,CAAc,CACxDQ,WAAW,CAAE,IAAI,CACjBC,YAAY,CAAE,IAAI,CAClBC,WAAW,CAAE,IAAI,CACjBC,QAAQ,CAAE,KAAK,CACfC,UAAU,CAAE,IAAI,CAChBC,MAAM,CAAE,KACZ,CAAC,CAAC,yCAPMC,UAAU,eAAEC,aAAa,eAUjCd,SAAS,CAAC,UAAM,CAEZ,GAAIE,cAAc,EAAIA,cAAc,CAACa,MAAM,GAAK,OAAO,CAAE,CAErD,OAAQb,cAAc,CAACc,IAAI,CAACC,QAAQ,EAChC,IAAK,kBAAkB,CACnBb,QAAQ,CAAC,8CAA8C,CAAC,CACxD,MACJ,IAAK,WAAW,CACZA,QAAQ,CAAC,0BAA0B,CAAC,CACpC,MACJ,IAAK,YAAY,CACbA,QAAQ,CAAC,yDAAyD,CAAC,CACnE,MACJ,IAAK,cAAc,CACfA,QAAQ,CAAC,oEAAoE,CAAC,CAC9E,MACJ,QACI,MAAK,CAEjB,CAAC,IACI,IAAIF,cAAc,EAAIA,cAAc,CAACa,MAAM,GAAK,SAAS,CAAE,CAE5DD,aAAa,gCACND,UAAU,MACbN,WAAW,CAAEL,cAAc,CAACc,IAAI,CAACE,YAAY,CAACC,OAAO,CACrDX,YAAY,CAAEN,cAAc,CAACc,IAAI,CAACE,YAAY,CAACE,QAAQ,CACvDX,WAAW,CAAEP,cAAc,CAACc,IAAI,CAACE,YAAY,CAACG,cAAc,CAC5DX,QAAQ,CAAER,cAAc,CAACc,IAAI,CAACE,YAAY,CAACI,WAAW,CACtDX,UAAU,CAAET,cAAc,CAACc,IAAI,CAACE,YAAY,CAACK,MAAM,CACnDX,MAAM,CAAEV,cAAc,CAACc,IAAI,CAACE,YAAY,CAACM,IAAI,GAC/C,CACFpB,QAAQ,CAAC,EAAE,CAAC,CAEZ,OAAQF,cAAc,CAACc,IAAI,CAACC,QAAQ,EAChC,IAAK,WAAW,CACZX,UAAU,8BAAMD,OAAO,aAAKH,cAAc,CAACc,IAAI,CAACS,QAAQ,uBAAqB,CAC7E,MACJ,IAAK,YAAY,CACbnB,UAAU,8BAAMD,OAAO,aAAKH,cAAc,CAACc,IAAI,CAACS,QAAQ,qBAAmB,CAC3E,MACJ,IAAK,aAAa,CACdnB,UAAU,8BAAMD,OAAO,yBAAiBH,cAAc,CAACc,IAAI,CAACE,YAAY,CAACG,cAAc,oBAAkB,CACzG,MACJ,IAAK,WAAW,CACZf,UAAU,8BAAMD,OAAO,6BAAqBH,cAAc,CAACc,IAAI,CAACE,YAAY,CAACK,MAAM,qBAAmB,CACtG,MACJ,IAAK,SAAS,CACVjB,UAAU,8BAAMD,OAAO,iCAAgC,CACvD,MACJ,QACI,MAAK,CAEjB,CAEJ,CAAC,CAAE,CAACH,cAAc,CAAC,CAAC,CAGpB,MAAO,CAAEW,UAAU,CAAVA,UAAU,CAAER,OAAO,CAAPA,OAAO,CAAEF,KAAK,CAALA,KAAM,CAAC,CACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}