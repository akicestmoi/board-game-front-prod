{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\board-game\\\\ts_front\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\n/* Base */\nimport { createContext, useReducer } from \"react\";\n\n/* I. Specifying Types for State, Dispatch and Action for Context and Reducer initialization*/\n/* I.1.A. Context State Type */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  username: sessionStorage.getItem(\"sessionName\")\n};\n\n/* I.1.B. Dispatch Types */\nvar AuthType;\n(function (AuthType) {\n  AuthType[\"LOGIN\"] = \"LOGIN\";\n  AuthType[\"LOGOUT\"] = \"LOGOUT\";\n})(AuthType || (AuthType = {}));\nexport const doLogin = username => ({\n  type: AuthType.LOGIN,\n  username\n});\nexport const doLogout = () => ({\n  type: AuthType.LOGOUT\n});\n\n/* II. Reducer */\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case AuthType.LOGIN:\n      const {\n        username\n      } = action;\n      return {\n        ...state,\n        username\n      };\n    case AuthType.LOGOUT:\n      return {\n        ...state,\n        username: null\n      };\n    default:\n      return state;\n  }\n};\n\n/* III. Context */\nexport const AuthContext = /*#__PURE__*/createContext({\n  state: initialState,\n  dispatch: () => null\n});\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  console.log('AuthContext state:', state);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useReducer","initialState","username","sessionStorage","getItem","AuthType","doLogin","type","LOGIN","doLogout","LOGOUT","authReducer","state","action","AuthContext","dispatch","AuthContextProvider","children","console","log"],"sources":["D:/Code/board-game/ts_front/src/contexts/AuthContext.tsx"],"sourcesContent":["/* Base */\r\nimport { createContext, useReducer } from \"react\"\r\n\r\n\r\n/* I. Specifying Types for State, Dispatch and Action for Context and Reducer initialization*/\r\n/* I.1.A. Context State Type */\r\ntype contextState = {\r\n    username: string | null;\r\n};\r\n\r\nexport const initialState: contextState = {\r\n    username: sessionStorage.getItem(\"sessionName\"),\r\n};\r\n\r\n\r\n/* I.1.B. Dispatch Types */\r\nenum AuthType {\r\n    LOGIN = 'LOGIN',\r\n    LOGOUT = 'LOGOUT'\r\n}\r\n\r\ntype LoginAction = {\r\n    type: typeof AuthType.LOGIN\r\n    username: string\r\n}\r\n\r\ntype LogoutAction = {\r\n    type: typeof AuthType.LOGOUT\r\n}\r\n\r\n\r\n/* I.1.C. Action Types */\r\ntype AuthAction = LoginAction | LogoutAction \r\n\r\nexport const doLogin = (username: string): AuthAction => ({\r\n    type: AuthType.LOGIN,\r\n    username\r\n})\r\n\r\nexport const doLogout = (): AuthAction => ({\r\n    type: AuthType.LOGOUT,\r\n})\r\n\r\n\r\n\r\n/* II. Reducer */\r\nexport const authReducer = (state: contextState, action: AuthAction): contextState => {\r\n    switch(action.type) {\r\n        case AuthType.LOGIN:\r\n            const { username } = action\r\n            return { ...state, username }\r\n        case AuthType.LOGOUT:\r\n            return { ...state, username: null }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n/* III. Context */\r\nexport const AuthContext = createContext<{ \r\n    state: contextState, dispatch: React.Dispatch<AuthAction> \r\n}>({ \r\n    state: initialState, dispatch: () => null \r\n})\r\n\r\n\r\nexport const AuthContextProvider = ({ children }: any) => {\r\n\r\n    const [state, dispatch] = useReducer(authReducer, initialState)\r\n    console.log('AuthContext state:', state)\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ state, dispatch }}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}"],"mappings":";;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAGjD;AACA;AAAA;AAKA,OAAO,MAAMC,YAA0B,GAAG;EACtCC,QAAQ,EAAEC,cAAc,CAACC,OAAO,CAAC,aAAa;AAClD,CAAC;;AAGD;AAAA,IACKC,QAAQ;AAAA,WAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;AAAA,GAARA,QAAQ,KAARA,QAAQ;AAkBb,OAAO,MAAMC,OAAO,GAAIJ,QAAgB,KAAkB;EACtDK,IAAI,EAAEF,QAAQ,CAACG,KAAK;EACpBN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,QAAQ,GAAG,OAAmB;EACvCF,IAAI,EAAEF,QAAQ,CAACK;AACnB,CAAC,CAAC;;AAIF;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAmB,EAAEC,MAAkB,KAAmB;EAClF,QAAOA,MAAM,CAACN,IAAI;IACd,KAAKF,QAAQ,CAACG,KAAK;MACf,MAAM;QAAEN;MAAS,CAAC,GAAGW,MAAM;MAC3B,OAAO;QAAE,GAAGD,KAAK;QAAEV;MAAS,CAAC;IACjC,KAAKG,QAAQ,CAACK,MAAM;MAChB,OAAO;QAAE,GAAGE,KAAK;QAAEV,QAAQ,EAAE;MAAK,CAAC;IACvC;MACI,OAAOU,KAAK;EAAA;AAExB,CAAC;;AAID;AACA,OAAO,MAAME,WAAW,gBAAGf,aAAa,CAErC;EACCa,KAAK,EAAEX,YAAY;EAAEc,QAAQ,EAAE,MAAM;AACzC,CAAC,CAAC;AAGF,OAAO,MAAMC,mBAAmB,GAAG,QAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC;EAEjD,MAAM,CAACL,KAAK,EAAEG,QAAQ,CAAC,GAAGf,UAAU,CAACW,WAAW,EAAEV,YAAY,CAAC;EAC/DiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEP,KAAK,CAAC;EAExC,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEA,KAAK;MAAEG;IAAS,CAAE;IAAA,UAC3CE;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAG/B,CAAC;AAAA,GAXYD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}